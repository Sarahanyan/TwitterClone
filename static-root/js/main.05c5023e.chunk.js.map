{"version":3,"sources":["tweets/components.js","lookup/components.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["ActionBtn","props","singleTweet","action","useState","userLike","setUserLike","likes","setLikes","btnClass","btnText","like","unlike","retweet","className","onClick","event","preventDefault","Tweet","content","TweetsList","tweets","setTweets","createdTweet","useEffect","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","alert","send","displayTweets","id","map","index","TweetsComponent","textareaRef","useRef","setCreatedTweet","onSubmit","newVal","current","value","console","log","ref","required","type","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","getElementById","ReactDOM","render","StrictMode","tweetsEl"],"mappings":"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","file":"static/js/main.05c5023e.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\"\nimport {displayTweets} from \"../lookup\"\n\nexport const ActionBtn = (props) => {\n  const handleClick = (event) => {\n    event.preventDefault() \n    userLike ? setLikes(likes - 1) : setLikes(likes + 1)\n    setUserLike(!userLike)\n  }\n\n  const {singleTweet, action} = props\n  const [userLike, setUserLike] = useState(false)\n  const [likes, setLikes] = useState(singleTweet.likes)\n  const btnClass = action === \"like\" ? \"btn-primary\" : action === \"unlike\" ? \"btn-outline-secondary\" : \"btn-outline-success\"                                                                   \n  const btnText = { like: `${likes} likes`, \n                    unlike: \"unlike\", \n                    retweet: \"retweet\"\n                  }\n\n  return(\n    <button className={`btn ${btnClass} mx-1`} onClick={handleClick}>\n      {btnText[action]}\n    </button>\n  )\n}\n\nexport const Tweet = (props) => {\n  const {content, likes} = props.singleTweet\n  return (\n    <div className=\"col-10 py-5 my-3 border-bottom\">\n      <h3>{content}</h3>\n      <div className=\"btn btn-group\">\n        <ActionBtn singleTweet= {props.singleTweet} action=\"like\" />\n        <ActionBtn singleTweet= {props.singleTweet} action=\"unlike\" />\n        <ActionBtn singleTweet= {props.singleTweet} action=\"retweet\" />\n      </div>\n    </div>\n  )\n}\n\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([])\n  const createdTweet = props.createdTweet\n\n  useEffect(() => {\n    setTweets([createdTweet, ...tweets])\n  }, [createdTweet])\n\n  useEffect(() => {\n    const setTweetsCallback = (response, status) => {\n      if (status === 200){\n        setTweets(response)\n        if (!tweets) {\n          setTweets([{id: 1, content: \"hey\"}, {id: 2, content: \"heysup\"}, {id: 3, content: \"sup\"}])      \n        }\n        \n      }\n    }\n    displayTweets(setTweetsCallback)\n\n  }, [])\n\n  return (\n\n      <div className=\"container align-center\">\n          {\n          tweets.map((singleTweet, index) =>{\n            const {id, content, likes} = singleTweet\n            return(\n              <Tweet key={`${index}-${id}`} singleTweet = {singleTweet} />\n            )\n          })\n          }\n      </div>\n\n  );\n}\n\nexport const TweetsComponent = (props) => {\n  const textareaRef = useRef()\n  const [createdTweet, setCreatedTweet] = useState({content: \"\"})\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textareaRef.current.value\n    console.log(newVal);\n    setCreatedTweet({content: newVal})\n  }\n  return (\n    <div className=\"col-12 my-4\">\n      <form onSubmit={handleSubmit}>\n          <textarea ref={textareaRef} required={true} className=\"form-control\" />\n          <button type=\"submit\" className=\"btn btn-primary mt-2\">Tweet</button>\n      </form>\n      <TweetsList createdTweet={createdTweet}/>\n    </div>\n      \n    )\n}","export function displayTweets(callback){\n            const xhr = new XMLHttpRequest()\n            const method = \"GET\"\n            const url = \"http://localhost:8000/api/tweets/\"\n            const responseType = \"json\"\n\n            xhr.responseType = responseType\n            xhr.open(method, url)\n            \n            xhr.onload = () => {\n              callback(xhr.response, xhr.status)\n            }\n\n            xhr.onerror = () => {\n                alert(\"Sorry, a serious error occured\");\n            }\n            xhr.send()\n        }","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from \"react\"\nimport {TweetsComponent} from \"./tweets\"\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <div className=\"container align-center\">\n        <TweetsComponent />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {TweetsComponent} from './tweets'\n\nconst appEl = document.getElementById('root')\n\nif (appEl) {\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n}\n\nconst tweetsEl =   document.getElementById('tweetme-2')\n\nif (tweetsEl) {\n  ReactDOM.render(\n  <React.StrictMode>\n    <TweetsComponent />\n  </React.StrictMode>,\n  tweetsEl\n); \n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}