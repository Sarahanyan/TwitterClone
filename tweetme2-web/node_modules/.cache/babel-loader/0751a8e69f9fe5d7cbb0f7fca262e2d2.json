{"ast":null,"code":"function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();// Does this cookie string begin with the name we want?\nif(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}export function backendLookup(method,endpoint,callback,data){var jsonData={};if(data){jsonData=JSON.stringify(data);}// console.log(\"data: \", data);\n// console.log(\"jsonData: \", jsonData);\nvar csrftoken=getCookie('csrftoken');var xhr=new XMLHttpRequest();var url=\"http://localhost:8000/api\".concat(endpoint);xhr.responseType=\"json\";xhr.open(method,url);xhr.setRequestHeader(\"Content-Type\",\"application/json\");if(csrftoken){// xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\nxhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");xhr.setRequestHeader(\"X-CSRFToken\",csrftoken);}xhr.onload=function(){if(xhr.status===403){var detail=xhr.response.detail;if(detail===\"Authentication credentials were not provided.\"){if(window.location.href.indexOf(\"login\")===-1){window.location.href=\"/login/?showLoginRequired=true\";}}}callback(xhr.response,xhr.status);};xhr.onerror=function(){alert(\"Sorry, a serious error occured\");};xhr.send(jsonData);}","map":{"version":3,"sources":["/home/sarah/Dev/DjangoReact/tweetme2/tweetme2-web/src/lookup/components.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","csrftoken","xhr","XMLHttpRequest","url","responseType","open","setRequestHeader","onload","status","detail","response","window","location","href","indexOf","onerror","alert","send"],"mappings":"AAAA,QAASA,CAAAA,SAAT,CAAmBC,IAAnB,CAAyB,CACT,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIC,QAAQ,CAACC,MAAT,EAAmBD,QAAQ,CAACC,MAAT,GAAoB,EAA3C,CAA+C,CAC3C,GAAIC,CAAAA,OAAO,CAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,OAAO,CAACG,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACrC,GAAIH,CAAAA,MAAM,CAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CACA;AACA,GAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAAoBT,IAAI,CAACO,MAAL,CAAc,CAAlC,IAA0CP,IAAI,CAAG,GAArD,CAA2D,CACvDC,WAAW,CAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,CAAc,CAA/B,CAAD,CAAhC,CACA,MACH,CACJ,CACJ,CACD,MAAON,CAAAA,WAAP,CACH,CAEb,MAAQ,SACRU,CAAAA,aADQ,CACMC,MADN,CACcC,QADd,CAENC,QAFM,CAEIC,IAFJ,CAEU,CACd,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAID,IAAJ,CAAS,CACPC,QAAQ,CAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX,CACD,CACD;AACA;AAEA,GAAII,CAAAA,SAAS,CAAGpB,SAAS,CAAC,WAAD,CAAzB,CAEA,GAAMqB,CAAAA,GAAG,CAAG,GAAIC,CAAAA,cAAJ,EAAZ,CACA,GAAMC,CAAAA,GAAG,oCAA+BT,QAA/B,CAAT,CAEAO,GAAG,CAACG,YAAJ,CAAmB,MAAnB,CAEAH,GAAG,CAACI,IAAJ,CAASZ,MAAT,CAAiBU,GAAjB,EACAF,GAAG,CAACK,gBAAJ,CAAqB,cAArB,CAAqC,kBAArC,EACA,GAAIN,SAAJ,CAAe,CACb;AACAC,GAAG,CAACK,gBAAJ,CAAqB,kBAArB,CAAyC,gBAAzC,EACAL,GAAG,CAACK,gBAAJ,CAAqB,aAArB,CAAoCN,SAApC,EACD,CAEDC,GAAG,CAACM,MAAJ,CAAa,UAAM,CACjB,GAAIN,GAAG,CAACO,MAAJ,GAAe,GAAnB,CAAwB,CACtB,GAAMC,CAAAA,MAAM,CAAGR,GAAG,CAACS,QAAJ,CAAaD,MAA5B,CACA,GAAIA,MAAM,GAAK,+CAAf,CAAgE,CAC9D,GAAIE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,OAA7B,IAA0C,CAAC,CAA/C,CAAkD,CAChDH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,gCAAvB,CACD,CACF,CACF,CACDlB,QAAQ,CAACM,GAAG,CAACS,QAAL,CAAeT,GAAG,CAACO,MAAnB,CAAR,CACD,CAVD,CAYAP,GAAG,CAACc,OAAJ,CAAc,UAAM,CAChBC,KAAK,CAAC,gCAAD,CAAL,CACH,CAFD,CAGAf,GAAG,CAACgB,IAAJ,CAASpB,QAAT,EACH","sourcesContent":["function getCookie(name) {\n                var cookieValue = null;\n                if (document.cookie && document.cookie !== '') {\n                    var cookies = document.cookie.split(';');\n                    for (var i = 0; i < cookies.length; i++) {\n                        var cookie = cookies[i].trim();\n                        // Does this cookie string begin with the name we want?\n                        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                            break;\n                        }\n                    }\n                }\n                return cookieValue;\n            }\n\nexport  function \nbackendLookup(method, endpoint, \n  callback, data) {\n    let jsonData = {}\n    if (data){\n      jsonData = JSON.stringify(data)\n    }\n    // console.log(\"data: \", data);\n    // console.log(\"jsonData: \", jsonData);\n\n    var csrftoken = getCookie('csrftoken');\n\n    const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n\n    xhr.responseType = \"json\"\n    \n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    if (csrftoken) {\n      // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n    }\n    \n    xhr.onload = () => {\n      if (xhr.status === 403) {\n        const detail = xhr.response.detail\n        if (detail === \"Authentication credentials were not provided.\") {\n          if (window.location.href.indexOf(\"login\") === -1) {\n            window.location.href = \"/login/?showLoginRequired=true\"\n          }\n        }\n      }\n      callback(xhr.response, xhr.status)\n    }\n\n    xhr.onerror = () => {\n        alert(\"Sorry, a serious error occured\");\n    }\n    xhr.send(jsonData)\n}"]},"metadata":{},"sourceType":"module"}