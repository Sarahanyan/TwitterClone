{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sarah/Dev/DjangoReact/tweetme2/tweetme2-web/src/tweets/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { displayTweets } from \"../lookup\";\nexport const ActionBtn = props => {\n  _s();\n\n  const handleClick = event => {\n    event.preventDefault();\n    userLike ? setLikes(likes - 1) : setLikes(likes + 1);\n    setUserLike(!userLike);\n  };\n\n  const {\n    singleTweet,\n    action\n  } = props;\n  const [userLike, setUserLike] = useState(false);\n  const [likes, setLikes] = useState(singleTweet.likes);\n  const btnClass = action === \"like\" ? \"btn-primary\" : action === \"unlike\" ? \"btn-outline-secondary\" : \"btn-outline-success\";\n  const btnText = {\n    like: `${likes} likes`,\n    unlike: \"unlike\",\n    retweet: \"retweet\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${btnClass} mx-1`,\n    onClick: handleClick,\n    children: btnText[action]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionBtn, \"Ei40APfNpNuQNzsww+J3TYghEFQ=\");\n\n_c = ActionBtn;\nexport const Tweet = props => {\n  const {\n    content,\n    likes\n  } = props.singleTweet;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-6 col-10 py-5 my-3 border-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        singleTweet: props.singleTweet,\n        action: \"like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        singleTweet: props.singleTweet,\n        action: \"unlike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        singleTweet: props.singleTweet,\n        action: \"retweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Tweet;\nexport function TweetsList() {\n  _s2();\n\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const setTweetsCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n\n        if (!tweets) {\n          setTweets([{\n            id: 1,\n            content: \"hey\"\n          }, {\n            id: 2,\n            content: \"heysup\"\n          }, {\n            id: 3,\n            content: \"sup\"\n          }]);\n        }\n      }\n    };\n\n    displayTweets(setTweetsCallback);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container align-center\",\n    children: tweets.map((singleTweet, index) => {\n      const {\n        id,\n        content,\n        likes\n      } = singleTweet;\n      return /*#__PURE__*/_jsxDEV(Tweet, {\n        singleTweet: singleTweet\n      }, `${index}-${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(TweetsList, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c3 = TweetsList;\n\nconst TweetsComponent = props => {};\n\n_c4 = TweetsComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ActionBtn\");\n$RefreshReg$(_c2, \"Tweet\");\n$RefreshReg$(_c3, \"TweetsList\");\n$RefreshReg$(_c4, \"TweetsComponent\");","map":{"version":3,"sources":["/home/sarah/Dev/DjangoReact/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useState","useEffect","displayTweets","ActionBtn","props","handleClick","event","preventDefault","userLike","setLikes","likes","setUserLike","singleTweet","action","btnClass","btnText","like","unlike","retweet","Tweet","content","TweetsList","tweets","setTweets","setTweetsCallback","response","status","id","map","index","TweetsComponent"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {displayTweets} from \"../lookup\"\n\nexport const ActionBtn = (props) => {\n  const handleClick = (event) => {\n    event.preventDefault() \n    userLike ? setLikes(likes - 1) : setLikes(likes + 1)\n    setUserLike(!userLike)\n  }\n\n  const {singleTweet, action} = props\n  const [userLike, setUserLike] = useState(false)\n  const [likes, setLikes] = useState(singleTweet.likes)\n  const btnClass = action === \"like\" ? \"btn-primary\" : action === \"unlike\" ? \"btn-outline-secondary\" : \"btn-outline-success\"                                                                   \n  const btnText = { like: `${likes} likes`, \n                    unlike: \"unlike\", \n                    retweet: \"retweet\"\n                  }\n\n  return(\n    <button className={`btn ${btnClass} mx-1`} onClick={handleClick}>\n      {btnText[action]}\n    </button>\n  )\n}\n\nexport const Tweet = (props) => {\n  const {content, likes} = props.singleTweet\n  return (\n    <div className=\"col-md-6 col-10 py-5 my-3 border-bottom\">\n      <h3>{content}</h3>\n      <div className=\"btn btn-group\">\n        <ActionBtn singleTweet= {props.singleTweet} action=\"like\" />\n        <ActionBtn singleTweet= {props.singleTweet} action=\"unlike\" />\n        <ActionBtn singleTweet= {props.singleTweet} action=\"retweet\" />\n      </div>\n    </div>\n  )\n}\n\nexport function TweetsList() {\n  const [tweets, setTweets] = useState([])\n\n  useEffect(() => {\n    const setTweetsCallback = (response, status) => {\n      if (status === 200){\n        setTweets(response)\n        if (!tweets) {\n          setTweets([{id: 1, content: \"hey\"}, {id: 2, content: \"heysup\"}, {id: 3, content: \"sup\"}])      \n        }\n        \n      }\n    }\n    displayTweets(setTweetsCallback)\n\n  }, [])\n\n  return (\n\n      <div className=\"container align-center\">\n          {\n          tweets.map((singleTweet, index) =>{\n            const {id, content, likes} = singleTweet\n            return(\n              <Tweet key={`${index}-${id}`} singleTweet = {singleTweet} />\n            )\n          })\n          }\n      </div>\n\n  );\n}\n\nconst TweetsComponent = (props) => {\n  \n}"]},"metadata":{},"sourceType":"module"}