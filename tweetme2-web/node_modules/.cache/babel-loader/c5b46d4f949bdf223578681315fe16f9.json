{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sarah/Dev/DjangoReact/tweetme2/tweetme2-web/src/tweets/feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { apiTweetsFeed } from \"./lookup\";\nimport { Tweet } from \"./detail\";\nexport function TweetsFeedList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const createdTweet = props.createdTweet;\n  let retweetedTweet;\n  useEffect(() => {\n    setTweets([createdTweet, ...tweets]);\n  }, [createdTweet]);\n  useEffect(() => {\n    const setTweetsCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response.results);\n\n        if (!tweets) {\n          setTweets([{\n            id: 1,\n            content: \"hey\"\n          }, {\n            id: 2,\n            content: \"heysup\"\n          }, {\n            id: 3,\n            content: \"sup\"\n          }]);\n        }\n\n        setNextUrl(response.next);\n      }\n    };\n\n    apiTweetsFeed(setTweetsCallback);\n  }, []);\n\n  const didRetweet = actionTweet => {\n    retweetedTweet = actionTweet;\n    setTweets([retweetedTweet, ...tweets]);\n  };\n\n  const handleLoadNext = event => {\n    event.preventDefault();\n\n    const handleLoadNextResponse = (response, status) => {\n      if (status === 200) {\n        setTweets([...tweets, ...response.results]);\n        setNextUrl(response.next);\n      }\n    };\n\n    apiTweetsFeed(handleLoadNextResponse, nextUrl);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container align-center\",\n    children: [tweets.map((singleTweet, index) => {\n      const {\n        id,\n        content,\n        likes\n      } = singleTweet;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tweet, {\n          singleTweet: singleTweet,\n          handleDidRetweet: didRetweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, `${index}-${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this);\n    }), nextUrl !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success float-end\",\n      onClick: handleLoadNext,\n      children: \"More Tweets  >>>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TweetsFeedList, \"2JAh0GG1zmi8U4E88awADCyL8yI=\");\n\n_c = TweetsFeedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetsFeedList\");","map":{"version":3,"sources":["/home/sarah/Dev/DjangoReact/tweetme2/tweetme2-web/src/tweets/feed.js"],"names":["React","useState","useEffect","apiTweetsFeed","Tweet","TweetsFeedList","props","tweets","setTweets","nextUrl","setNextUrl","createdTweet","retweetedTweet","setTweetsCallback","response","status","results","id","content","next","didRetweet","actionTweet","handleLoadNext","event","preventDefault","handleLoadNextResponse","map","singleTweet","index","likes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {apiTweetsFeed} from \"./lookup\"\nimport {Tweet} from \"./detail\"\n\nexport function TweetsFeedList(props) {\n  const [tweets, setTweets] = useState([])\n  const [nextUrl, setNextUrl] = useState(null)\n  const createdTweet = props.createdTweet\n  let retweetedTweet\n  \n  useEffect(() => {\n    setTweets([createdTweet, ...tweets])\n  }, [createdTweet])\n\n  useEffect(() => {\n    const setTweetsCallback = (response, status) => {\n      if (status === 200){\n        setTweets(response.results)\n        if (!tweets) {\n          setTweets([{id: 1, content: \"hey\"}, {id: 2, content: \"heysup\"}, {id: 3, content: \"sup\"}])      \n        }\n        setNextUrl(response.next)\n      }\n    }\n    apiTweetsFeed(setTweetsCallback)\n\n  }, [])\n  \n  const didRetweet = (actionTweet) => {\n    retweetedTweet = actionTweet\n    setTweets([retweetedTweet, ...tweets])\n  }\n\n  const handleLoadNext = (event) => {\n    event.preventDefault()\n      const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setTweets([...tweets, ...response.results])\n            setNextUrl(response.next)\n        }\n      }\n        apiTweetsFeed(handleLoadNextResponse, nextUrl)\n\n  }\n\n  return (\n      <div className=\"container align-center\">\n          {\n          tweets.map((singleTweet, index) =>{\n            const {id, content, likes} = singleTweet\n            return(\n              <div key={`${index}-${id}`}>\n                <Tweet singleTweet = {singleTweet} handleDidRetweet={didRetweet}/>\n              </div>\n            )\n          })\n          }\n          {nextUrl !== null && \n          <button className=\"btn btn-success float-end\" onClick={handleLoadNext}>\n            More Tweets  >>> \n            </button>\n            }\n      </div>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}